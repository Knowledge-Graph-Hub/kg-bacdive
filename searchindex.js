Search.setIndex({"docnames": ["index", "index copy", "kg_bacdive", "kg_bacdive.merge_utils", "kg_bacdive.transform_utils", "kg_bacdive.transform_utils.bacdive", "kg_bacdive.transform_utils.example_transform", "kg_bacdive.transform_utils.mediadive", "kg_bacdive.transform_utils.ontology", "kg_bacdive.transform_utils.traits", "kg_bacdive.utils", "kg_microbe", "kg_microbe.transform_utils", "kg_microbe.transform_utils.ontology", "kg_microbe.transform_utils.traits", "kg_microbe.utils", "modules", "query_utils", "run", "setup", "static/intro", "tests"], "filenames": ["index.rst", "index copy.rst", "kg_bacdive.rst", "kg_bacdive.merge_utils.rst", "kg_bacdive.transform_utils.rst", "kg_bacdive.transform_utils.bacdive.rst", "kg_bacdive.transform_utils.example_transform.rst", "kg_bacdive.transform_utils.mediadive.rst", "kg_bacdive.transform_utils.ontology.rst", "kg_bacdive.transform_utils.traits.rst", "kg_bacdive.utils.rst", "kg_microbe.rst", "kg_microbe.transform_utils.rst", "kg_microbe.transform_utils.ontology.rst", "kg_microbe.transform_utils.traits.rst", "kg_microbe.utils.rst", "modules.rst", "query_utils.rst", "run.rst", "setup.rst", "static/intro.md", "tests.rst"], "titles": ["KG-Microbe documentation", "KG-Microbe documentation", "kg_bacdive package", "kg_bacdive.merge_utils package", "kg_bacdive.transform_utils package", "kg_bacdive.transform_utils.bacdive package", "kg_bacdive.transform_utils.example_transform package", "kg_bacdive.transform_utils.mediadive package", "kg_bacdive.transform_utils.ontology package", "kg_bacdive.transform_utils.traits package", "kg_bacdive.utils package", "kg_microbe package", "kg_microbe.transform_utils package", "kg_microbe.transform_utils.ontology package", "kg_microbe.transform_utils.traits package", "kg_microbe.utils package", "kg_bacdive", "query_utils package", "run module", "setup module", "Knowledge Graphs for Microbial data", "tests package"], "terms": {"knowledg": [0, 1], "graph": [0, 1, 2, 3, 7], "microbi": [0, 1], "data": [0, 1, 2, 4, 5, 7, 8, 9], "hub": [0, 1], "concept": [0, 1], "prerequisit": [0, 1], "setup": [0, 1], "pipelin": [0, 1], "stage": [0, 1], "download": [0, 1, 5, 7, 16], "transform": [0, 1, 5, 6, 7, 8, 9, 16], "merg": [0, 1, 2, 3], "kg_bacdiv": [0, 1], "packag": [0, 1, 16], "subpackag": [0, 1, 16], "submodul": [0, 1, 16], "modul": [0, 1, 16], "queri": [0, 1, 16], "run": [0, 1, 4, 5, 7, 8, 9, 16, 20], "index": [0, 1], "search": [0, 1], "page": [0, 1], "merge_util": [2, 16], "merge_kg": [2, 16], "load_and_merg": [2, 3], "parse_load_config": [2, 3], "transform_util": [2, 11, 16], "bacdiv": [2, 4, 7, 21], "example_transform": [2, 4], "mediad": [2, 4], "ontologi": [2, 4, 10, 11, 12, 20], "ontology_transform": [2, 4, 11, 12], "trait": [2, 4, 11, 12, 20], "constant": [2, 16], "data_dir": [2, 4], "default_input_dir": [2, 4], "default_output_dir": [2, 4], "pass_through": [2, 4], "util": [2, 4, 11, 16], "ner_util": [2, 9, 16], "annot": [2, 10, 20], "pandas_util": [2, 16], "drop_dupl": [2, 10], "robot_util": [2, 9, 11, 16], "convert_to_json": [2, 10], "extract_convert_to_json": [2, 10], "initialize_robot": [2, 10], "remove_convert_to_json": [2, 10], "resourc": 2, "from": [2, 4, 9, 20], "yaml": [2, 3, 5, 7, 20], "file": [2, 4, 5, 7, 8, 9, 10, 20], "yaml_fil": [2, 3], "output_dir": [2, 4, 5, 7, 8, 9], "snippet_onli": 2, "ignore_cach": 2, "fals": [2, 4, 10], "list": [2, 10], "url": [2, 5, 7, 20], "dl": 2, "base": [2, 4, 5, 7, 8, 9], "config": [2, 3], "default": [2, 4], "directori": [2, 4], "paramet": [2, 3, 4, 7, 8, 9, 10], "str": [2, 3, 4, 7, 8, 9, 10], "A": [2, 3, 10], "string": [2, 3], "point": [2, 3], "param": 2, "facilit": 2, "type": [2, 3, 4, 7, 8, 10], "locat": 2, "bool": 2, "onli": [2, 20], "first": 2, "5": [2, 20], "kb": 2, "sourc": [2, 3, 8, 20], "test": 2, "check": 2, "ignor": [2, 10], "cach": 2, "even": 2, "thei": 2, "exist": 2, "rtype": 2, "none": [2, 4, 5, 7, 8, 9, 10], "return": [2, 3, 4, 7, 8, 10], "parse_query_yaml": [2, 16], "pars": [2, 3, 4, 8], "result": 2, "dictionari": [2, 3, 7, 20], "dict": [2, 3, 7], "result_dict_to_tsv": [2, 16], "result_dict": 2, "outfil": [2, 10], "write": 2, "tsv": [2, 5, 7, 10], "run_queri": [2, 16], "endpoint": 2, "return_format": 2, "json": [2, 5, 7, 8, 10], "sparql": 2, "format": [2, 7, 20], "drive": 2, "kg": [2, 4, 5, 7, 20, 21], "step": [2, 20], "input_dir": [2, 4, 5, 7, 8, 9], "class": [2, 4, 5, 7, 8, 9, 10], "declar": [2, 20], "data_sourc": 2, "call": [2, 9], "script": [2, 7, 10, 20], "name": [2, 8, 9, 10], "each": 2, "kgx": [2, 3, 7], "can": [2, 7, 10, 20], "ingest": [2, 7, 9], "directli": [2, 7], "either": [2, 7, 10], "http": [2, 7, 9, 20], "github": [2, 7, 9, 20], "com": [2, 7, 9, 20], "biolink": 2, "blob": [2, 7, 9], "master": [2, 7, 9], "prepar": [2, 7], "md": [2, 7], "option": [2, 8, 10], "path": [2, 4, 7, 8, 9, 10], "import": 2, "output": [2, 4, 5, 7, 9], "process": [3, 8], "1": [3, 20], "load": 3, "defin": 3, "compat": 3, "int": 3, "number": 3, "us": [3, 7, 9, 10, 20], "multidigraph": 3, "networkx": 3, "The": [3, 10, 20], "bacdivetransform": [4, 5], "mediadivedivetransform": [4, 7], "download_yaml_and_get_json": [4, 7], "get_compounds_of_solut": [4, 7], "standardize_compound_id": [4, 7], "ontologytransform": [4, 8], "decompress": [4, 8], "traitstransform": [4, 9, 20], "source_nam": 4, "nlp": [4, 9, 10], "object": 4, "parent": 4, "set": [4, 10], "up": 4, "lot": 4, "info": 4, "posixpath": 4, "home": 4, "runner": 4, "work": [4, 20], "raw": [4, 5, 7], "nodes_fil": 4, "edges_fil": 4, "copi": 4, "node": [4, 5, 7, 8, 20], "edg": [4, 5, 7, 8, 20], "take": 4, "put": 4, "data_fil": [4, 5, 7, 8, 9], "union": [4, 8, 9, 10], "input": [4, 5, 7, 9, 10], "ani": [5, 7], "wa": [5, 7], "place": [5, 7], "incom": [5, 7], "txt": [5, 7], "py": [5, 7, 20], "bacdive_strain": 5, "two": [5, 7], "templat": [5, 7], "how": [5, 7], "would": [5, 7], "design": [5, 7], "exampl": [6, 7], "ncat": 7, "tangerin": 7, "target_dir": 7, "metad": 7, "provid": [7, 10], "api": 7, "id": 7, "get": [7, 20], "ingredi": 7, "solut": 7, "via": [7, 9], "compound_nam": 7, "compound_id": 7, "compound": 7, "standard": 7, "an": 8, "obograph": 8, "form": 8, "nad": 8, "unzip": 8, "ncbi": 9, "gtdb": 9, "true": 9, "dataset": 9, "essenti": 9, "just": 9, "thi": [9, 20], "bacteria": [9, 20], "archaea": 9, "condensed_traits_ncbi": [9, 20], "csv": [9, 20], "And": 9, "extract": [9, 10, 20], "follow": 9, "column": [9, 10], "tax_id": 9, "org_nam": 9, "metabol": 9, "pathwai": 9, "shape": 9, "carbon_substr": 9, "cell_shap": 9, "isolation_sourc": 9, "also": [9, 20], "implement": [9, 10], "oak": 9, "robot": [9, 10, 20], "method": [9, 10], "perform": 9, "need": 9, "df": 10, "prefix": 10, "exclusion_list": 10, "llm": 10, "datafram": 10, "text": 10, "oaklib": 10, "token": 10, "panda": 10, "file_path": 10, "read": 10, "drop": 10, "duplic": 10, "export": 10, "same": [10, 20], "over": 10, "ont": 10, "convert": [10, 20], "owl": [10, 20], "subprocess": 10, "librari": 10, "ont_nam": 10, "term": 10, "mode": 10, "all": [10, 20], "children": 10, "curi": 10, "star": 10, "contain": 10, "mainli": 10, "seed": 10, "inter": 10, "relat": 10, "between": 10, "them": 10, "necessarili": 10, "sub": 10, "super": 10, "top": 10, "plu": 10, "bot": 10, "bottom": 10, "mireot": 10, "preserv": 10, "hierarchi": 10, "subclass": 10, "subproperti": 10, "relationship": 10, "doe": 10, "try": 10, "full": 10, "logic": 10, "entail": 10, "below": 10, "initi": 10, "necessari": 10, "configur": 10, "consist": 10, "shell": [10, 20], "environ": [10, 20], "variabl": 10, "remov": 10, "": [10, 20], "biohub_convert": 11, "download_util": 11, "nlp_util": 11, "content": 16, "repositori": 20, "i": 20, "deriv": 20, "covid": 20, "19": 20, "pleas": 20, "see": 20, "here": 20, "java": 20, "jdk": 20, "requir": 20, "order": 20, "properli": 20, "instal": 20, "instruct": 20, "found": 20, "creat": 20, "python": 20, "virtual": 20, "venv": 20, "anaconda": 20, "etc": 20, "pip": 20, "poetri": 20, "git": 20, "clone": 20, "microb": 20, "cd": 20, "current": 20, "arachaea": 20, "consid": 20, "now": 20, "convers": 20, "tabl": 20, "titl": 20, "jar": 20, "obojson": 20, "In": 20, "case": 20, "we": 20, "leverag": 20, "featur": 20, "subset": 20, "document": 20, "could": 20, "chebi": 20, "while": 20, "oger": 20, "carbon": 20, "substrat": 20, "inform": 20, "ncbitaxon": 20, "captur": 20, "organism": 20, "classif": 20, "correspond": 20, "four": 20, "mention": 20, "abov": 20, "4": 20, "togeth": 20, "OR": 20, "individu": 20, "For": 20, "chebitransform": 20, "ncbitransform": 20, "ar": 20, "cumul": 20, "gener": 20, "final": 20, "avail": 20}, "objects": {"": [[2, 0, 0, "-", "kg_bacdive"], [21, 0, 0, "-", "tests"]], "kg_bacdive": [[2, 1, 1, "", "download"], [2, 0, 0, "-", "download"], [3, 0, 0, "-", "merge_utils"], [2, 0, 0, "-", "query"], [2, 0, 0, "-", "run"], [2, 0, 0, "-", "transform"], [4, 0, 0, "-", "transform_utils"], [10, 0, 0, "-", "utils"]], "kg_bacdive.download": [[2, 1, 1, "", "download"]], "kg_bacdive.merge_utils": [[3, 1, 1, "", "load_and_merge"], [3, 0, 0, "-", "merge_kg"], [3, 1, 1, "", "parse_load_config"]], "kg_bacdive.merge_utils.merge_kg": [[3, 1, 1, "", "load_and_merge"], [3, 1, 1, "", "parse_load_config"]], "kg_bacdive.query": [[2, 1, 1, "", "parse_query_yaml"], [2, 1, 1, "", "result_dict_to_tsv"], [2, 1, 1, "", "run_query"]], "kg_bacdive.transform": [[2, 1, 1, "", "transform"]], "kg_bacdive.transform_utils": [[5, 0, 0, "-", "bacdive"], [4, 0, 0, "-", "constants"], [6, 0, 0, "-", "example_transform"], [7, 0, 0, "-", "mediadive"], [8, 0, 0, "-", "ontology"], [9, 0, 0, "-", "traits"], [4, 0, 0, "-", "transform"]], "kg_bacdive.transform_utils.bacdive": [[5, 2, 1, "", "BacDiveTransform"], [5, 0, 0, "-", "bacdive"]], "kg_bacdive.transform_utils.bacdive.BacDiveTransform": [[5, 3, 1, "", "run"]], "kg_bacdive.transform_utils.bacdive.bacdive": [[5, 2, 1, "", "BacDiveTransform"]], "kg_bacdive.transform_utils.bacdive.bacdive.BacDiveTransform": [[5, 3, 1, "", "run"]], "kg_bacdive.transform_utils.mediadive": [[7, 2, 1, "", "MediaDiveDiveTransform"], [7, 0, 0, "-", "mediadive"]], "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform": [[7, 3, 1, "", "download_yaml_and_get_json"], [7, 3, 1, "", "get_compounds_of_solution"], [7, 3, 1, "", "run"], [7, 3, 1, "", "standardize_compound_id"]], "kg_bacdive.transform_utils.mediadive.mediadive": [[7, 2, 1, "", "MediaDiveDiveTransform"]], "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform": [[7, 3, 1, "", "download_yaml_and_get_json"], [7, 3, 1, "", "get_compounds_of_solution"], [7, 3, 1, "", "run"], [7, 3, 1, "", "standardize_compound_id"]], "kg_bacdive.transform_utils.ontology": [[8, 2, 1, "", "OntologyTransform"], [8, 0, 0, "-", "ontology_transform"]], "kg_bacdive.transform_utils.ontology.OntologyTransform": [[8, 3, 1, "", "decompress"], [8, 3, 1, "", "parse"], [8, 3, 1, "", "run"]], "kg_bacdive.transform_utils.ontology.ontology_transform": [[8, 2, 1, "", "OntologyTransform"]], "kg_bacdive.transform_utils.ontology.ontology_transform.OntologyTransform": [[8, 3, 1, "", "decompress"], [8, 3, 1, "", "parse"], [8, 3, 1, "", "run"]], "kg_bacdive.transform_utils.traits": [[9, 2, 1, "", "TraitsTransform"], [9, 0, 0, "-", "traits"]], "kg_bacdive.transform_utils.traits.TraitsTransform": [[9, 3, 1, "", "run"]], "kg_bacdive.transform_utils.traits.traits": [[9, 2, 1, "", "TraitsTransform"]], "kg_bacdive.transform_utils.traits.traits.TraitsTransform": [[9, 3, 1, "", "run"]], "kg_bacdive.transform_utils.transform": [[4, 2, 1, "", "Transform"]], "kg_bacdive.transform_utils.transform.Transform": [[4, 4, 1, "", "DATA_DIR"], [4, 4, 1, "", "DEFAULT_INPUT_DIR"], [4, 4, 1, "", "DEFAULT_OUTPUT_DIR"], [4, 3, 1, "", "pass_through"], [4, 3, 1, "", "run"]], "kg_bacdive.utils": [[10, 0, 0, "-", "ner_utils"], [10, 0, 0, "-", "pandas_utils"], [10, 0, 0, "-", "robot_utils"]], "kg_bacdive.utils.ner_utils": [[10, 1, 1, "", "annotate"]], "kg_bacdive.utils.pandas_utils": [[10, 1, 1, "", "drop_duplicates"]], "kg_bacdive.utils.robot_utils": [[10, 1, 1, "", "convert_to_json"], [10, 1, 1, "", "extract_convert_to_json"], [10, 1, 1, "", "initialize_robot"], [10, 1, 1, "", "remove_convert_to_json"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"kg": [0, 1], "microb": [0, 1], "document": [0, 1], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21], "indic": [0, 1], "tabl": [0, 1], "kg_bacdiv": [2, 3, 4, 5, 6, 7, 8, 9, 10, 16], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21], "subpackag": [2, 4, 11, 12], "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21], "download": [2, 11, 20], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21], "queri": [2, 11, 17], "run": [2, 18], "transform": [2, 4, 11, 12, 20], "merge_util": 3, "merge_kg": 3, "transform_util": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15], "constant": 4, "bacdiv": 5, "example_transform": 6, "mediad": 7, "ontologi": [8, 13], "ontology_transform": [8, 13], "trait": [9, 14], "util": [10, 15], "ner_util": 10, "pandas_util": 10, "robot_util": [10, 15], "kg_microb": [11, 12, 13, 14, 15], "biohub_convert": 15, "download_util": 15, "nlp_util": 15, "query_util": 17, "setup": [19, 20], "knowledg": 20, "graph": 20, "microbi": 20, "data": 20, "hub": 20, "concept": 20, "prerequisit": 20, "pipelin": 20, "stage": 20, "merg": 20, "test": 21, "test_download": 21, "test_download_from_yaml": 21, "test_queri": 21, "test_run": 21, "test_trait": 21, "test_transform_class": 21, "test_transform_util": 21, "test_vers": 21}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"KG-Microbe documentation": [[0, "kg-microbe-documentation"], [1, "kg-microbe-documentation"]], "Contents:": [[0, null], [1, null]], "Indices and tables": [[0, "indices-and-tables"], [1, "indices-and-tables"]], "kg_bacdive package": [[2, "kg-bacdive-package"]], "Subpackages": [[2, "subpackages"], [4, "subpackages"], [11, "subpackages"], [12, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [17, "submodules"], [21, "submodules"]], "kg_bacdive.download module": [[2, "module-kg_bacdive.download"]], "kg_bacdive.query module": [[2, "module-kg_bacdive.query"]], "kg_bacdive.run module": [[2, "module-kg_bacdive.run"]], "kg_bacdive.transform module": [[2, "module-kg_bacdive.transform"]], "Module contents": [[2, "module-kg_bacdive"], [3, "module-kg_bacdive.merge_utils"], [4, "module-kg_bacdive.transform_utils"], [5, "module-kg_bacdive.transform_utils.bacdive"], [6, "module-kg_bacdive.transform_utils.example_transform"], [7, "module-kg_bacdive.transform_utils.mediadive"], [8, "module-kg_bacdive.transform_utils.ontology"], [9, "module-kg_bacdive.transform_utils.traits"], [10, "module-kg_bacdive.utils"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [21, "module-tests"]], "kg_bacdive.merge_utils package": [[3, "kg-bacdive-merge-utils-package"]], "kg_bacdive.merge_utils.merge_kg module": [[3, "module-kg_bacdive.merge_utils.merge_kg"]], "kg_bacdive.transform_utils package": [[4, "kg-bacdive-transform-utils-package"]], "kg_bacdive.transform_utils.constants module": [[4, "module-kg_bacdive.transform_utils.constants"]], "kg_bacdive.transform_utils.transform module": [[4, "module-kg_bacdive.transform_utils.transform"]], "kg_bacdive.transform_utils.bacdive package": [[5, "kg-bacdive-transform-utils-bacdive-package"]], "kg_bacdive.transform_utils.bacdive.bacdive module": [[5, "module-kg_bacdive.transform_utils.bacdive.bacdive"]], "kg_bacdive.transform_utils.example_transform package": [[6, "kg-bacdive-transform-utils-example-transform-package"]], "kg_bacdive.transform_utils.example_transform.example_transform module": [[6, "kg-bacdive-transform-utils-example-transform-example-transform-module"]], "kg_bacdive.transform_utils.mediadive package": [[7, "kg-bacdive-transform-utils-mediadive-package"]], "kg_bacdive.transform_utils.mediadive.mediadive module": [[7, "module-kg_bacdive.transform_utils.mediadive.mediadive"]], "kg_bacdive.transform_utils.ontology package": [[8, "kg-bacdive-transform-utils-ontology-package"]], "kg_bacdive.transform_utils.ontology.ontology_transform module": [[8, "module-kg_bacdive.transform_utils.ontology.ontology_transform"]], "kg_bacdive.transform_utils.traits package": [[9, "kg-bacdive-transform-utils-traits-package"]], "kg_bacdive.transform_utils.traits.traits module": [[9, "module-kg_bacdive.transform_utils.traits.traits"]], "kg_bacdive.utils package": [[10, "kg-bacdive-utils-package"]], "kg_bacdive.utils.ner_utils module": [[10, "module-kg_bacdive.utils.ner_utils"]], "kg_bacdive.utils.pandas_utils module": [[10, "module-kg_bacdive.utils.pandas_utils"]], "kg_bacdive.utils.robot_utils module": [[10, "module-kg_bacdive.utils.robot_utils"]], "kg_microbe package": [[11, "kg-microbe-package"]], "kg_microbe.download module": [[11, "kg-microbe-download-module"]], "kg_microbe.query module": [[11, "kg-microbe-query-module"]], "kg_microbe.transform module": [[11, "kg-microbe-transform-module"]], "kg_microbe.transform_utils package": [[12, "kg-microbe-transform-utils-package"]], "kg_microbe.transform_utils.transform module": [[12, "kg-microbe-transform-utils-transform-module"]], "kg_microbe.transform_utils.ontology package": [[13, "kg-microbe-transform-utils-ontology-package"]], "kg_microbe.transform_utils.ontology.ontology_transform module": [[13, "kg-microbe-transform-utils-ontology-ontology-transform-module"]], "kg_microbe.transform_utils.traits package": [[14, "kg-microbe-transform-utils-traits-package"]], "kg_microbe.transform_utils.traits.traits module": [[14, "kg-microbe-transform-utils-traits-traits-module"]], "kg_microbe.utils package": [[15, "kg-microbe-utils-package"]], "kg_microbe.utils.biohub_converter module": [[15, "kg-microbe-utils-biohub-converter-module"]], "kg_microbe.utils.download_utils module": [[15, "kg-microbe-utils-download-utils-module"]], "kg_microbe.utils.nlp_utils module": [[15, "kg-microbe-utils-nlp-utils-module"]], "kg_microbe.utils.robot_utils module": [[15, "kg-microbe-utils-robot-utils-module"]], "kg_microbe.utils.transform_utils module": [[15, "kg-microbe-utils-transform-utils-module"]], "kg_bacdive": [[16, "kg-bacdive"]], "query_utils package": [[17, "query-utils-package"]], "query_utils.query module": [[17, "query-utils-query-module"]], "run module": [[18, "run-module"]], "setup module": [[19, "setup-module"]], "Knowledge Graphs for Microbial data": [[20, "knowledge-graphs-for-microbial-data"]], "Knowledge Graph Hub concept": [[20, "knowledge-graph-hub-concept"]], "Prerequisites": [[20, "prerequisites"]], "Setup": [[20, "setup"]], "Pipeline Stages:": [[20, "pipeline-stages"]], "Download": [[20, "download"]], "Transform": [[20, "transform"]], "Merge": [[20, "merge"]], "Data": [[20, "data"]], "tests package": [[21, "tests-package"]], "tests.test_download module": [[21, "tests-test-download-module"]], "tests.test_download_from_yaml module": [[21, "tests-test-download-from-yaml-module"]], "tests.test_query module": [[21, "tests-test-query-module"]], "tests.test_run module": [[21, "tests-test-run-module"]], "tests.test_traits module": [[21, "tests-test-traits-module"]], "tests.test_transform_class module": [[21, "tests-test-transform-class-module"]], "tests.test_transform_utils module": [[21, "tests-test-transform-utils-module"]], "tests.test_version module": [[21, "tests-test-version-module"]]}, "indexentries": {"download() (in module kg_bacdive)": [[2, "kg_bacdive.download"]], "download() (in module kg_bacdive.download)": [[2, "kg_bacdive.download.download"]], "kg_bacdive": [[2, "module-kg_bacdive"]], "kg_bacdive.download": [[2, "module-kg_bacdive.download"]], "kg_bacdive.query": [[2, "module-kg_bacdive.query"]], "kg_bacdive.run": [[2, "module-kg_bacdive.run"]], "kg_bacdive.transform": [[2, "module-kg_bacdive.transform"]], "module": [[2, "module-kg_bacdive"], [2, "module-kg_bacdive.download"], [2, "module-kg_bacdive.query"], [2, "module-kg_bacdive.run"], [2, "module-kg_bacdive.transform"], [3, "module-kg_bacdive.merge_utils"], [3, "module-kg_bacdive.merge_utils.merge_kg"], [4, "module-kg_bacdive.transform_utils"], [4, "module-kg_bacdive.transform_utils.constants"], [4, "module-kg_bacdive.transform_utils.transform"], [5, "module-kg_bacdive.transform_utils.bacdive"], [5, "module-kg_bacdive.transform_utils.bacdive.bacdive"], [6, "module-kg_bacdive.transform_utils.example_transform"], [7, "module-kg_bacdive.transform_utils.mediadive"], [7, "module-kg_bacdive.transform_utils.mediadive.mediadive"], [8, "module-kg_bacdive.transform_utils.ontology"], [8, "module-kg_bacdive.transform_utils.ontology.ontology_transform"], [9, "module-kg_bacdive.transform_utils.traits"], [9, "module-kg_bacdive.transform_utils.traits.traits"], [10, "module-kg_bacdive.utils"], [10, "module-kg_bacdive.utils.ner_utils"], [10, "module-kg_bacdive.utils.pandas_utils"], [10, "module-kg_bacdive.utils.robot_utils"], [21, "module-tests"]], "parse_query_yaml() (in module kg_bacdive.query)": [[2, "kg_bacdive.query.parse_query_yaml"]], "result_dict_to_tsv() (in module kg_bacdive.query)": [[2, "kg_bacdive.query.result_dict_to_tsv"]], "run_query() (in module kg_bacdive.query)": [[2, "kg_bacdive.query.run_query"]], "transform() (in module kg_bacdive.transform)": [[2, "kg_bacdive.transform.transform"]], "kg_bacdive.merge_utils": [[3, "module-kg_bacdive.merge_utils"]], "kg_bacdive.merge_utils.merge_kg": [[3, "module-kg_bacdive.merge_utils.merge_kg"]], "load_and_merge() (in module kg_bacdive.merge_utils)": [[3, "kg_bacdive.merge_utils.load_and_merge"]], "load_and_merge() (in module kg_bacdive.merge_utils.merge_kg)": [[3, "kg_bacdive.merge_utils.merge_kg.load_and_merge"]], "parse_load_config() (in module kg_bacdive.merge_utils)": [[3, "kg_bacdive.merge_utils.parse_load_config"]], "parse_load_config() (in module kg_bacdive.merge_utils.merge_kg)": [[3, "kg_bacdive.merge_utils.merge_kg.parse_load_config"]], "data_dir (kg_bacdive.transform_utils.transform.transform attribute)": [[4, "kg_bacdive.transform_utils.transform.Transform.DATA_DIR"]], "default_input_dir (kg_bacdive.transform_utils.transform.transform attribute)": [[4, "kg_bacdive.transform_utils.transform.Transform.DEFAULT_INPUT_DIR"]], "default_output_dir (kg_bacdive.transform_utils.transform.transform attribute)": [[4, "kg_bacdive.transform_utils.transform.Transform.DEFAULT_OUTPUT_DIR"]], "transform (class in kg_bacdive.transform_utils.transform)": [[4, "kg_bacdive.transform_utils.transform.Transform"]], "kg_bacdive.transform_utils": [[4, "module-kg_bacdive.transform_utils"]], "kg_bacdive.transform_utils.constants": [[4, "module-kg_bacdive.transform_utils.constants"]], "kg_bacdive.transform_utils.transform": [[4, "module-kg_bacdive.transform_utils.transform"]], "pass_through() (kg_bacdive.transform_utils.transform.transform method)": [[4, "kg_bacdive.transform_utils.transform.Transform.pass_through"]], "run() (kg_bacdive.transform_utils.transform.transform method)": [[4, "kg_bacdive.transform_utils.transform.Transform.run"]], "bacdivetransform (class in kg_bacdive.transform_utils.bacdive)": [[5, "kg_bacdive.transform_utils.bacdive.BacDiveTransform"]], "bacdivetransform (class in kg_bacdive.transform_utils.bacdive.bacdive)": [[5, "kg_bacdive.transform_utils.bacdive.bacdive.BacDiveTransform"]], "kg_bacdive.transform_utils.bacdive": [[5, "module-kg_bacdive.transform_utils.bacdive"]], "kg_bacdive.transform_utils.bacdive.bacdive": [[5, "module-kg_bacdive.transform_utils.bacdive.bacdive"]], "run() (kg_bacdive.transform_utils.bacdive.bacdivetransform method)": [[5, "kg_bacdive.transform_utils.bacdive.BacDiveTransform.run"]], "run() (kg_bacdive.transform_utils.bacdive.bacdive.bacdivetransform method)": [[5, "kg_bacdive.transform_utils.bacdive.bacdive.BacDiveTransform.run"]], "kg_bacdive.transform_utils.example_transform": [[6, "module-kg_bacdive.transform_utils.example_transform"]], "mediadivedivetransform (class in kg_bacdive.transform_utils.mediadive)": [[7, "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform"]], "mediadivedivetransform (class in kg_bacdive.transform_utils.mediadive.mediadive)": [[7, "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform"]], "download_yaml_and_get_json() (kg_bacdive.transform_utils.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform.download_yaml_and_get_json"]], "download_yaml_and_get_json() (kg_bacdive.transform_utils.mediadive.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform.download_yaml_and_get_json"]], "get_compounds_of_solution() (kg_bacdive.transform_utils.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform.get_compounds_of_solution"]], "get_compounds_of_solution() (kg_bacdive.transform_utils.mediadive.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform.get_compounds_of_solution"]], "kg_bacdive.transform_utils.mediadive": [[7, "module-kg_bacdive.transform_utils.mediadive"]], "kg_bacdive.transform_utils.mediadive.mediadive": [[7, "module-kg_bacdive.transform_utils.mediadive.mediadive"]], "run() (kg_bacdive.transform_utils.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform.run"]], "run() (kg_bacdive.transform_utils.mediadive.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform.run"]], "standardize_compound_id() (kg_bacdive.transform_utils.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.MediaDiveDiveTransform.standardize_compound_id"]], "standardize_compound_id() (kg_bacdive.transform_utils.mediadive.mediadive.mediadivedivetransform method)": [[7, "kg_bacdive.transform_utils.mediadive.mediadive.MediaDiveDiveTransform.standardize_compound_id"]], "ontologytransform (class in kg_bacdive.transform_utils.ontology)": [[8, "kg_bacdive.transform_utils.ontology.OntologyTransform"]], "ontologytransform (class in kg_bacdive.transform_utils.ontology.ontology_transform)": [[8, "kg_bacdive.transform_utils.ontology.ontology_transform.OntologyTransform"]], "decompress() (kg_bacdive.transform_utils.ontology.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.OntologyTransform.decompress"]], "decompress() (kg_bacdive.transform_utils.ontology.ontology_transform.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.ontology_transform.OntologyTransform.decompress"]], "kg_bacdive.transform_utils.ontology": [[8, "module-kg_bacdive.transform_utils.ontology"]], "kg_bacdive.transform_utils.ontology.ontology_transform": [[8, "module-kg_bacdive.transform_utils.ontology.ontology_transform"]], "parse() (kg_bacdive.transform_utils.ontology.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.OntologyTransform.parse"]], "parse() (kg_bacdive.transform_utils.ontology.ontology_transform.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.ontology_transform.OntologyTransform.parse"]], "run() (kg_bacdive.transform_utils.ontology.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.OntologyTransform.run"]], "run() (kg_bacdive.transform_utils.ontology.ontology_transform.ontologytransform method)": [[8, "kg_bacdive.transform_utils.ontology.ontology_transform.OntologyTransform.run"]], "traitstransform (class in kg_bacdive.transform_utils.traits)": [[9, "kg_bacdive.transform_utils.traits.TraitsTransform"]], "traitstransform (class in kg_bacdive.transform_utils.traits.traits)": [[9, "kg_bacdive.transform_utils.traits.traits.TraitsTransform"]], "kg_bacdive.transform_utils.traits": [[9, "module-kg_bacdive.transform_utils.traits"]], "kg_bacdive.transform_utils.traits.traits": [[9, "module-kg_bacdive.transform_utils.traits.traits"]], "run() (kg_bacdive.transform_utils.traits.traitstransform method)": [[9, "kg_bacdive.transform_utils.traits.TraitsTransform.run"]], "run() (kg_bacdive.transform_utils.traits.traits.traitstransform method)": [[9, "kg_bacdive.transform_utils.traits.traits.TraitsTransform.run"]], "annotate() (in module kg_bacdive.utils.ner_utils)": [[10, "kg_bacdive.utils.ner_utils.annotate"]], "convert_to_json() (in module kg_bacdive.utils.robot_utils)": [[10, "kg_bacdive.utils.robot_utils.convert_to_json"]], "drop_duplicates() (in module kg_bacdive.utils.pandas_utils)": [[10, "kg_bacdive.utils.pandas_utils.drop_duplicates"]], "extract_convert_to_json() (in module kg_bacdive.utils.robot_utils)": [[10, "kg_bacdive.utils.robot_utils.extract_convert_to_json"]], "initialize_robot() (in module kg_bacdive.utils.robot_utils)": [[10, "kg_bacdive.utils.robot_utils.initialize_robot"]], "kg_bacdive.utils": [[10, "module-kg_bacdive.utils"]], "kg_bacdive.utils.ner_utils": [[10, "module-kg_bacdive.utils.ner_utils"]], "kg_bacdive.utils.pandas_utils": [[10, "module-kg_bacdive.utils.pandas_utils"]], "kg_bacdive.utils.robot_utils": [[10, "module-kg_bacdive.utils.robot_utils"]], "remove_convert_to_json() (in module kg_bacdive.utils.robot_utils)": [[10, "kg_bacdive.utils.robot_utils.remove_convert_to_json"]], "tests": [[21, "module-tests"]]}})